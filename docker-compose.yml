version: '3'

networks:
  laravel:

services:
  app:
    build:
      context: .
      dockerfile: dockerfiles/nginx.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    container_name: 'nginx'
    ports:
      - "80:80"
    volumes:
      - ./src:/var/www/html:delegated
      - ./logs/nginx:/var/log/nginx
      - ./config/php/php.ini:/usr/local/etc/php/php.ini
    depends_on:
      - php
      - redis
      - mysql
      - mailhog
    networks:
      - laravel

  mysql:
    image: mariadb:10.6
    container_name: 'mysql'
    restart: unless-stopped
    tty: true
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: rosetta
      MYSQL_USER: dim
      MYSQL_PASSWORD: pass
      MYSQL_ROOT_PASSWORD: pass
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - ./config/mysql:/var/lib/mysql
      - ./logs/mysql:/var/log/mysql
    networks:
      - laravel

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: 'phpmyadmin'
    links:
      - mysql
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      PMA_USER: dim
      PMA_PASSWORD: pass
      MYSQL_ROOT_PASSWORD: pass
      MYSQL_USER: dim
      MYSQL_PASSWORD: pass
      UPLOAD_LIMIT: 512M
      MEMORY_LIMIT: 512M
    ports:
      - 8082:80
    volumes:
      - ./config/php/php.ini:/usr/local/etc/php/php.ini
    networks:
      - laravel

  php:
    build:
      context: ./dockerfiles
      dockerfile: php.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    container_name: 'php'
    ports:
      - "9000:9000"
    volumes:
      - ./src:/var/www/html:delegated
    networks:
      - laravel

  redis:
    image: redis:alpine
    container_name: 'redis'
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - ./logs/redis:/var/log/redis
    networks:
      - laravel

  composer:
    build:
      context: ./dockerfiles
      dockerfile: php.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    container_name: 'composer'
    volumes:
      - ./src:/var/www/html
    depends_on:
      - php
    entrypoint: [ 'composer', '--ignore-platform-reqs' ]
    networks:
      - laravel

  npm:
    image: node:current-alpine
    container_name: 'npm'
    volumes:
      - ./src:/var/www/html
    ports:
      - "3000:3000"
      - "3001:3001"
      - "5173:5173"
    working_dir: /var/www/html
    entrypoint: [ 'npm' ]
    networks:
      - laravel

  artisan:
    build:
      context: ./dockerfiles
      dockerfile: php.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    container_name: 'artisan'
    volumes:
      - ./src:/var/www/html:delegated
    depends_on:
      - mysql
    entrypoint: [ 'php', '/var/www/html/artisan' ]
    networks:
      - laravel

  mailhog:
    image: mailhog/mailhog:latest
    container_name: 'mailhog'
    ports:
      - "1025:1025"
      - "8025:8025"
    networks:
      - laravel
